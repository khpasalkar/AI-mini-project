# load package FactoMineR and ggplot2
require(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
require(rpart)
install.packages("rpart")
install.packages("rpart")
# read cleaned data set
dd = read.csv("CleanCreditScoring.csv", header=TRUE, stringsAsFactors=TRUE)
setwd("F:/KRUTIKA/ENGINEERING/SEM 7/AI/Credit final")
# Let's obtain a decision tree with the function 'rpart'
# using all the variables (both continuous and categorical)
ct = rpart(Status ~ ., data=dd)
require(rpart)
install.packages("rpart")
install.packages("rpart")
# read cleaned data set
dd = read.csv("CleanCreditScoring.csv", header=TRUE, stringsAsFactors=TRUE)
# Let's obtain a decision tree with the function 'rpart'
# using all the variables (both continuous and categorical)
ct = rpart(Status ~ ., data=dd)
#### let's see how the output looks like
ct
library(rpart)
install.packages(c("cli", "digest", "fansi", "R6", "Rcpp", "stringi"))
library("rpart", lib.loc="C:/Program Files/R/R-3.5.0/library")
install.packages("rpart")
require(rpart)
source('F:/KRUTIKA/ENGINEERING/SEM 7/AI/Credit final/src/decision_trees.R')
shiny::runApp()
install.packages("shinydashboard")
runApp()
install.packages("shinythemes")
runApp()
install.packages("ROCR")
runApp()
install.packages("data.table")
install.packages("xgboost")
runApp()
install.packages("FactoMineR")
runApp()
install.packages("randomForest")
runApp()
install.packages("caret")
runApp()
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
shiny::runApp()
runApp()
install.packages("e1070")
install.packages("e1071")
runApp()
runApp()
runApp()
